"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import feast.core.DataSource_pb2
import feast.core.Entity_pb2
import feast.core.FeatureService_pb2
import feast.core.FeatureView_pb2
import feast.core.InfraObject_pb2
import feast.core.OnDemandFeatureView_pb2
import feast.core.Registry_pb2
import feast.core.SavedDataset_pb2
import feast.core.StreamFeatureView_pb2
import feast.core.ValidationProfile_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class RefreshRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project",b"project"]) -> None: ...
global___RefreshRequest = RefreshRequest

class UpdateInfraRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    INFRA_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def infra(self) -> feast.core.InfraObject_pb2.Infra: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        infra : typing.Optional[feast.core.InfraObject_pb2.Infra] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["infra",b"infra"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","infra",b"infra","project",b"project"]) -> None: ...
global___UpdateInfraRequest = UpdateInfraRequest

class GetInfraRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project"]) -> None: ...
global___GetInfraRequest = GetInfraRequest

class ListProjectMetadataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project"]) -> None: ...
global___ListProjectMetadataRequest = ListProjectMetadataRequest

class ListProjectMetadataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_METADATA_FIELD_NUMBER: builtins.int
    @property
    def project_metadata(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Registry_pb2.ProjectMetadata]: ...
    def __init__(self,
        *,
        project_metadata : typing.Optional[typing.Iterable[feast.core.Registry_pb2.ProjectMetadata]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_metadata",b"project_metadata"]) -> None: ...
global___ListProjectMetadataResponse = ListProjectMetadataResponse

class ApplyMaterializationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURE_VIEW_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    START_DATE_FIELD_NUMBER: builtins.int
    END_DATE_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def feature_view(self) -> feast.core.FeatureView_pb2.FeatureView: ...
    project: typing.Text = ...
    @property
    def start_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        feature_view : typing.Optional[feast.core.FeatureView_pb2.FeatureView] = ...,
        project : typing.Text = ...,
        start_date : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_date : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_date",b"end_date","feature_view",b"feature_view","start_date",b"start_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","end_date",b"end_date","feature_view",b"feature_view","project",b"project","start_date",b"start_date"]) -> None: ...
global___ApplyMaterializationRequest = ApplyMaterializationRequest

class ApplyEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITY_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def entity(self) -> feast.core.Entity_pb2.Entity: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        entity : typing.Optional[feast.core.Entity_pb2.Entity] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity",b"entity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","entity",b"entity","project",b"project"]) -> None: ...
global___ApplyEntityRequest = ApplyEntityRequest

class GetEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetEntityRequest = GetEntityRequest

class ListEntitiesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListEntitiesRequest = ListEntitiesRequest

class ListEntitiesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENTITIES_FIELD_NUMBER: builtins.int
    @property
    def entities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.Entity_pb2.Entity]: ...
    def __init__(self,
        *,
        entities : typing.Optional[typing.Iterable[feast.core.Entity_pb2.Entity]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entities",b"entities"]) -> None: ...
global___ListEntitiesResponse = ListEntitiesResponse

class DeleteEntityRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteEntityRequest = DeleteEntityRequest

class ApplyDataSourceRequest(google.protobuf.message.Message):
    """DataSources

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_SOURCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def data_source(self) -> feast.core.DataSource_pb2.DataSource: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        data_source : typing.Optional[feast.core.DataSource_pb2.DataSource] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_source",b"data_source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","data_source",b"data_source","project",b"project"]) -> None: ...
global___ApplyDataSourceRequest = ApplyDataSourceRequest

class GetDataSourceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetDataSourceRequest = GetDataSourceRequest

class ListDataSourcesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListDataSourcesRequest = ListDataSourcesRequest

class ListDataSourcesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DATA_SOURCES_FIELD_NUMBER: builtins.int
    @property
    def data_sources(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.DataSource_pb2.DataSource]: ...
    def __init__(self,
        *,
        data_sources : typing.Optional[typing.Iterable[feast.core.DataSource_pb2.DataSource]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_sources",b"data_sources"]) -> None: ...
global___ListDataSourcesResponse = ListDataSourcesResponse

class DeleteDataSourceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteDataSourceRequest = DeleteDataSourceRequest

class ApplyFeatureViewRequest(google.protobuf.message.Message):
    """FeatureViews

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURE_VIEW_FIELD_NUMBER: builtins.int
    ON_DEMAND_FEATURE_VIEW_FIELD_NUMBER: builtins.int
    STREAM_FEATURE_VIEW_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def feature_view(self) -> feast.core.FeatureView_pb2.FeatureView: ...
    @property
    def on_demand_feature_view(self) -> feast.core.OnDemandFeatureView_pb2.OnDemandFeatureView: ...
    @property
    def stream_feature_view(self) -> feast.core.StreamFeatureView_pb2.StreamFeatureView: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        feature_view : typing.Optional[feast.core.FeatureView_pb2.FeatureView] = ...,
        on_demand_feature_view : typing.Optional[feast.core.OnDemandFeatureView_pb2.OnDemandFeatureView] = ...,
        stream_feature_view : typing.Optional[feast.core.StreamFeatureView_pb2.StreamFeatureView] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_feature_view",b"base_feature_view","feature_view",b"feature_view","on_demand_feature_view",b"on_demand_feature_view","stream_feature_view",b"stream_feature_view"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_feature_view",b"base_feature_view","commit",b"commit","feature_view",b"feature_view","on_demand_feature_view",b"on_demand_feature_view","project",b"project","stream_feature_view",b"stream_feature_view"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["base_feature_view",b"base_feature_view"]) -> typing.Optional[typing_extensions.Literal["feature_view","on_demand_feature_view","stream_feature_view"]]: ...
global___ApplyFeatureViewRequest = ApplyFeatureViewRequest

class GetFeatureViewRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetFeatureViewRequest = GetFeatureViewRequest

class ListFeatureViewsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListFeatureViewsRequest = ListFeatureViewsRequest

class ListFeatureViewsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURE_VIEWS_FIELD_NUMBER: builtins.int
    @property
    def feature_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.FeatureView_pb2.FeatureView]: ...
    def __init__(self,
        *,
        feature_views : typing.Optional[typing.Iterable[feast.core.FeatureView_pb2.FeatureView]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_views",b"feature_views"]) -> None: ...
global___ListFeatureViewsResponse = ListFeatureViewsResponse

class DeleteFeatureViewRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteFeatureViewRequest = DeleteFeatureViewRequest

class GetStreamFeatureViewRequest(google.protobuf.message.Message):
    """StreamFeatureView

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetStreamFeatureViewRequest = GetStreamFeatureViewRequest

class ListStreamFeatureViewsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListStreamFeatureViewsRequest = ListStreamFeatureViewsRequest

class ListStreamFeatureViewsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    STREAM_FEATURE_VIEWS_FIELD_NUMBER: builtins.int
    @property
    def stream_feature_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.StreamFeatureView_pb2.StreamFeatureView]: ...
    def __init__(self,
        *,
        stream_feature_views : typing.Optional[typing.Iterable[feast.core.StreamFeatureView_pb2.StreamFeatureView]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["stream_feature_views",b"stream_feature_views"]) -> None: ...
global___ListStreamFeatureViewsResponse = ListStreamFeatureViewsResponse

class GetOnDemandFeatureViewRequest(google.protobuf.message.Message):
    """OnDemandFeatureView

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetOnDemandFeatureViewRequest = GetOnDemandFeatureViewRequest

class ListOnDemandFeatureViewsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListOnDemandFeatureViewsRequest = ListOnDemandFeatureViewsRequest

class ListOnDemandFeatureViewsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ON_DEMAND_FEATURE_VIEWS_FIELD_NUMBER: builtins.int
    @property
    def on_demand_feature_views(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.OnDemandFeatureView_pb2.OnDemandFeatureView]: ...
    def __init__(self,
        *,
        on_demand_feature_views : typing.Optional[typing.Iterable[feast.core.OnDemandFeatureView_pb2.OnDemandFeatureView]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["on_demand_feature_views",b"on_demand_feature_views"]) -> None: ...
global___ListOnDemandFeatureViewsResponse = ListOnDemandFeatureViewsResponse

class ApplyFeatureServiceRequest(google.protobuf.message.Message):
    """FeatureServices

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURE_SERVICE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def feature_service(self) -> feast.core.FeatureService_pb2.FeatureService: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        feature_service : typing.Optional[feast.core.FeatureService_pb2.FeatureService] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["feature_service",b"feature_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","feature_service",b"feature_service","project",b"project"]) -> None: ...
global___ApplyFeatureServiceRequest = ApplyFeatureServiceRequest

class GetFeatureServiceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetFeatureServiceRequest = GetFeatureServiceRequest

class ListFeatureServicesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project","tags",b"tags"]) -> None: ...
global___ListFeatureServicesRequest = ListFeatureServicesRequest

class ListFeatureServicesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    FEATURE_SERVICES_FIELD_NUMBER: builtins.int
    @property
    def feature_services(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.FeatureService_pb2.FeatureService]: ...
    def __init__(self,
        *,
        feature_services : typing.Optional[typing.Iterable[feast.core.FeatureService_pb2.FeatureService]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feature_services",b"feature_services"]) -> None: ...
global___ListFeatureServicesResponse = ListFeatureServicesResponse

class DeleteFeatureServiceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteFeatureServiceRequest = DeleteFeatureServiceRequest

class ApplySavedDatasetRequest(google.protobuf.message.Message):
    """SavedDataset

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SAVED_DATASET_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def saved_dataset(self) -> feast.core.SavedDataset_pb2.SavedDataset: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        saved_dataset : typing.Optional[feast.core.SavedDataset_pb2.SavedDataset] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["saved_dataset",b"saved_dataset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","project",b"project","saved_dataset",b"saved_dataset"]) -> None: ...
global___ApplySavedDatasetRequest = ApplySavedDatasetRequest

class GetSavedDatasetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetSavedDatasetRequest = GetSavedDatasetRequest

class ListSavedDatasetsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project"]) -> None: ...
global___ListSavedDatasetsRequest = ListSavedDatasetsRequest

class ListSavedDatasetsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SAVED_DATASETS_FIELD_NUMBER: builtins.int
    @property
    def saved_datasets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.SavedDataset_pb2.SavedDataset]: ...
    def __init__(self,
        *,
        saved_datasets : typing.Optional[typing.Iterable[feast.core.SavedDataset_pb2.SavedDataset]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["saved_datasets",b"saved_datasets"]) -> None: ...
global___ListSavedDatasetsResponse = ListSavedDatasetsResponse

class DeleteSavedDatasetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteSavedDatasetRequest = DeleteSavedDatasetRequest

class ApplyValidationReferenceRequest(google.protobuf.message.Message):
    """ValidationReference

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALIDATION_REFERENCE_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    @property
    def validation_reference(self) -> feast.core.ValidationProfile_pb2.ValidationReference: ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        validation_reference : typing.Optional[feast.core.ValidationProfile_pb2.ValidationReference] = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["validation_reference",b"validation_reference"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","project",b"project","validation_reference",b"validation_reference"]) -> None: ...
global___ApplyValidationReferenceRequest = ApplyValidationReferenceRequest

class GetValidationReferenceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","name",b"name","project",b"project"]) -> None: ...
global___GetValidationReferenceRequest = GetValidationReferenceRequest

class ListValidationReferencesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    ALLOW_CACHE_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    allow_cache: builtins.bool = ...
    def __init__(self,
        *,
        project : typing.Text = ...,
        allow_cache : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_cache",b"allow_cache","project",b"project"]) -> None: ...
global___ListValidationReferencesRequest = ListValidationReferencesRequest

class ListValidationReferencesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALIDATION_REFERENCES_FIELD_NUMBER: builtins.int
    @property
    def validation_references(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[feast.core.ValidationProfile_pb2.ValidationReference]: ...
    def __init__(self,
        *,
        validation_references : typing.Optional[typing.Iterable[feast.core.ValidationProfile_pb2.ValidationReference]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["validation_references",b"validation_references"]) -> None: ...
global___ListValidationReferencesResponse = ListValidationReferencesResponse

class DeleteValidationReferenceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    PROJECT_FIELD_NUMBER: builtins.int
    COMMIT_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    project: typing.Text = ...
    commit: builtins.bool = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        project : typing.Text = ...,
        commit : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["commit",b"commit","name",b"name","project",b"project"]) -> None: ...
global___DeleteValidationReferenceRequest = DeleteValidationReferenceRequest
